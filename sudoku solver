 #include <iostream>
using namespace std;

const int N = 9;
int grid[N][N];


void printGrid() {
    for (int row = 0; row < N; row++) {
        for (int col = 0; col < N; col++)
            cout << grid[row][col] << " ";
        cout << endl;
    }
}

// Check if placing num at (row, col) is valid
bool isValid(int row, int col, int num) {
    for (int x = 0; x < N; x++) {
        if (grid[row][x] == num || grid[x][col] == num)
            return false;
    }

    int startRow = row - row % 3;
    int startCol = col - col % 3;

    for (int i = 0; i < 3; i++)
        for (int j = 0; j < 3; j++)
            if (grid[startRow + i][startCol + j] == num)
                return false;

    return true;
}


bool solveSudoku() {
    for (int row = 0; row < N; row++) {
        for (int col = 0; col < N; col++) {
            if (grid[row][col] == 0) {
                for (int num = 1; num <= 9; num++) {
                    if (isValid(row, col, num)) {
                        grid[row][col] = num;

                        if (solveSudoku())
                            return true;

                        grid[row][col] = 0; 
                    }
                }
                return false;  
            }
        }
    }
    return true;  
}

int main() {
    cout << "Enter Sudoku grid (use 0 for empty cells):\n";
    for (int i = 0; i < N; i++)
        for (int j = 0; j < N; j++)
            cin >> grid[i][j];

    if (solveSudoku()) {
        cout << "\nSolved Sudoku:\n";
        printGrid();
    } else {
        cout << "No solution exists.\n";
    }

    return 0;
}
